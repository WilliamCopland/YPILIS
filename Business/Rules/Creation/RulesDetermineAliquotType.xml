<?xml version="1.0" encoding="utf-8"?><RuleSet Description="{p1:Null}" Name="{p1:Null}" ChainingBehavior="Full" xmlns:p1="http://schemas.microsoft.com/winfx/2006/xaml" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/workflow">
	<RuleSet.Rules>
		<Rule ReevaluationBehavior="Always" Priority="1000" Description="{p1:Null}" Active="True" Name="GetSpecimenOrderItem">
			<Rule.ThenActions>
				<RuleStatementAction>
					<RuleStatementAction.CodeDomStatement>
						<ns0:CodeExpressionStatement LinePragma="{p1:Null}" xmlns:ns0="clr-namespace:System.CodeDom;Assembly=System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
							<ns0:CodeExpressionStatement.Expression>
								<ns0:CodeMethodInvokeExpression>
									<ns0:CodeMethodInvokeExpression.Method>
										<ns0:CodeMethodReferenceExpression MethodName="GetSpecimenOrderItem">
											<ns0:CodeMethodReferenceExpression.TargetObject>
												<ns0:CodeThisReferenceExpression />
											</ns0:CodeMethodReferenceExpression.TargetObject>
										</ns0:CodeMethodReferenceExpression>
									</ns0:CodeMethodInvokeExpression.Method>
								</ns0:CodeMethodInvokeExpression>
							</ns0:CodeExpressionStatement.Expression>
						</ns0:CodeExpressionStatement>
					</RuleStatementAction.CodeDomStatement>
				</RuleStatementAction>
				<RuleStatementAction>
					<RuleStatementAction.CodeDomStatement>
						<ns0:CodeExpressionStatement LinePragma="{p1:Null}" xmlns:ns0="clr-namespace:System.CodeDom;Assembly=System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
							<ns0:CodeExpressionStatement.Expression>
								<ns0:CodeMethodInvokeExpression>
									<ns0:CodeMethodInvokeExpression.Method>
										<ns0:CodeMethodReferenceExpression MethodName="DetermineAliquotType">
											<ns0:CodeMethodReferenceExpression.TargetObject>
												<ns0:CodeThisReferenceExpression />
											</ns0:CodeMethodReferenceExpression.TargetObject>
										</ns0:CodeMethodReferenceExpression>
									</ns0:CodeMethodInvokeExpression.Method>
								</ns0:CodeMethodInvokeExpression>
							</ns0:CodeExpressionStatement.Expression>
						</ns0:CodeExpressionStatement>
					</RuleStatementAction.CodeDomStatement>
				</RuleStatementAction>
				<RuleStatementAction>
					<RuleStatementAction.CodeDomStatement>
						<ns0:CodeExpressionStatement LinePragma="{p1:Null}" xmlns:ns0="clr-namespace:System.CodeDom;Assembly=System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
							<ns0:CodeExpressionStatement.Expression>
								<ns0:CodeMethodInvokeExpression>
									<ns0:CodeMethodInvokeExpression.Method>
										<ns0:CodeMethodReferenceExpression MethodName="ListTestsOrdered">
											<ns0:CodeMethodReferenceExpression.TargetObject>
												<ns0:CodeThisReferenceExpression />
											</ns0:CodeMethodReferenceExpression.TargetObject>
										</ns0:CodeMethodReferenceExpression>
									</ns0:CodeMethodInvokeExpression.Method>
								</ns0:CodeMethodInvokeExpression>
							</ns0:CodeExpressionStatement.Expression>
						</ns0:CodeExpressionStatement>
					</RuleStatementAction.CodeDomStatement>
				</RuleStatementAction>
				<RuleStatementAction>
					<RuleStatementAction.CodeDomStatement>
						<ns0:CodeExpressionStatement LinePragma="{p1:Null}" xmlns:ns0="clr-namespace:System.CodeDom;Assembly=System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
							<ns0:CodeExpressionStatement.Expression>
								<ns0:CodeMethodInvokeExpression>
									<ns0:CodeMethodInvokeExpression.Method>
										<ns0:CodeMethodReferenceExpression MethodName="DetermineLabelPrefixFromTest">
											<ns0:CodeMethodReferenceExpression.TargetObject>
												<ns0:CodeThisReferenceExpression />
											</ns0:CodeMethodReferenceExpression.TargetObject>
										</ns0:CodeMethodReferenceExpression>
									</ns0:CodeMethodInvokeExpression.Method>
								</ns0:CodeMethodInvokeExpression>
							</ns0:CodeExpressionStatement.Expression>
						</ns0:CodeExpressionStatement>
					</RuleStatementAction.CodeDomStatement>
				</RuleStatementAction>
				<RuleStatementAction>
					<RuleStatementAction.CodeDomStatement>
						<ns0:CodeExpressionStatement LinePragma="{p1:Null}" xmlns:ns0="clr-namespace:System.CodeDom;Assembly=System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
							<ns0:CodeExpressionStatement.Expression>
								<ns0:CodeMethodInvokeExpression>
									<ns0:CodeMethodInvokeExpression.Method>
										<ns0:CodeMethodReferenceExpression MethodName="DetermineAliquotDescriptionFromTest">
											<ns0:CodeMethodReferenceExpression.TargetObject>
												<ns0:CodeThisReferenceExpression />
											</ns0:CodeMethodReferenceExpression.TargetObject>
										</ns0:CodeMethodReferenceExpression>
									</ns0:CodeMethodInvokeExpression.Method>
								</ns0:CodeMethodInvokeExpression>
							</ns0:CodeExpressionStatement.Expression>
						</ns0:CodeExpressionStatement>
					</RuleStatementAction.CodeDomStatement>
				</RuleStatementAction>
				<RuleStatementAction>
					<RuleStatementAction.CodeDomStatement>
						<ns0:CodeExpressionStatement LinePragma="{p1:Null}" xmlns:ns0="clr-namespace:System.CodeDom;Assembly=System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
							<ns0:CodeExpressionStatement.Expression>
								<ns0:CodeMethodInvokeExpression>
									<ns0:CodeMethodInvokeExpression.Method>
										<ns0:CodeMethodReferenceExpression MethodName="SetData">
											<ns0:CodeMethodReferenceExpression.TargetObject>
												<ns0:CodeThisReferenceExpression />
											</ns0:CodeMethodReferenceExpression.TargetObject>
										</ns0:CodeMethodReferenceExpression>
									</ns0:CodeMethodInvokeExpression.Method>
								</ns0:CodeMethodInvokeExpression>
							</ns0:CodeExpressionStatement.Expression>
						</ns0:CodeExpressionStatement>
					</RuleStatementAction.CodeDomStatement>
				</RuleStatementAction>
			</Rule.ThenActions>
			<Rule.Condition>
				<RuleExpressionCondition Name="{p1:Null}">
					<RuleExpressionCondition.Expression>
						<ns0:CodeBinaryOperatorExpression Operator="BooleanAnd" xmlns:ns0="clr-namespace:System.CodeDom;Assembly=System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
							<ns0:CodeBinaryOperatorExpression.Right>
								<ns0:CodeBinaryOperatorExpression Operator="ValueEquality">
									<ns0:CodeBinaryOperatorExpression.Right>
										<ns0:CodePrimitiveExpression>
											<ns0:CodePrimitiveExpression.Value>
												<ns1:Boolean xmlns:ns1="clr-namespace:System;Assembly=mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">false</ns1:Boolean>
											</ns0:CodePrimitiveExpression.Value>
										</ns0:CodePrimitiveExpression>
									</ns0:CodeBinaryOperatorExpression.Right>
									<ns0:CodeBinaryOperatorExpression.Left>
										<ns0:CodeBinaryOperatorExpression Operator="ValueEquality">
											<ns0:CodeBinaryOperatorExpression.Right>
												<ns0:CodePrimitiveExpression />
											</ns0:CodeBinaryOperatorExpression.Right>
											<ns0:CodeBinaryOperatorExpression.Left>
												<ns0:CodeFieldReferenceExpression FieldName="m_AliquotOrder">
													<ns0:CodeFieldReferenceExpression.TargetObject>
														<ns0:CodeThisReferenceExpression />
													</ns0:CodeFieldReferenceExpression.TargetObject>
												</ns0:CodeFieldReferenceExpression>
											</ns0:CodeBinaryOperatorExpression.Left>
										</ns0:CodeBinaryOperatorExpression>
									</ns0:CodeBinaryOperatorExpression.Left>
								</ns0:CodeBinaryOperatorExpression>
							</ns0:CodeBinaryOperatorExpression.Right>
							<ns0:CodeBinaryOperatorExpression.Left>
								<ns0:CodeBinaryOperatorExpression Operator="ValueEquality">
									<ns0:CodeBinaryOperatorExpression.Right>
										<ns0:CodePrimitiveExpression>
											<ns0:CodePrimitiveExpression.Value>
												<ns1:Boolean xmlns:ns1="clr-namespace:System;Assembly=mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">false</ns1:Boolean>
											</ns0:CodePrimitiveExpression.Value>
										</ns0:CodePrimitiveExpression>
									</ns0:CodeBinaryOperatorExpression.Right>
									<ns0:CodeBinaryOperatorExpression.Left>
										<ns0:CodeBinaryOperatorExpression Operator="ValueEquality">
											<ns0:CodeBinaryOperatorExpression.Right>
												<ns0:CodePrimitiveExpression />
											</ns0:CodeBinaryOperatorExpression.Right>
											<ns0:CodeBinaryOperatorExpression.Left>
												<ns0:CodePropertyReferenceExpression PropertyName="AccessionOrder">
													<ns0:CodePropertyReferenceExpression.TargetObject>
														<ns0:CodeThisReferenceExpression />
													</ns0:CodePropertyReferenceExpression.TargetObject>
												</ns0:CodePropertyReferenceExpression>
											</ns0:CodeBinaryOperatorExpression.Left>
										</ns0:CodeBinaryOperatorExpression>
									</ns0:CodeBinaryOperatorExpression.Left>
								</ns0:CodeBinaryOperatorExpression>
							</ns0:CodeBinaryOperatorExpression.Left>
						</ns0:CodeBinaryOperatorExpression>
					</RuleExpressionCondition.Expression>
				</RuleExpressionCondition>
			</Rule.Condition>
		</Rule>
	</RuleSet.Rules>
</RuleSet>